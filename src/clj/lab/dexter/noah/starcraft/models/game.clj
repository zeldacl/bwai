(ns lab.dexter.noah.starcraft.models
  (:use [flatland.protobuf.core :only [protodef protobuf protobuf-dump protobuf-load protobuf-schema]])
  (:import (org.bwapi.proxy.messages GameMessages$StaticGameData)))

(def StaticGameData (protodef GameMessages$StaticGameData))
;{:type :struct,
; :name messages.StaticGameData,
; :fields {:staticneutralunits {:type :list, :values {:type :struct, :name messages.UnitId, :fields {:id {:type :int}}}}, :unittypes {:type :list, :values {:type :struct, :name messages.UnitTypeData, :fields {:turnradius {:type :int}, :maxenergy {:type :int}, :isrefinery {:type :boolean}, :dimensionright {:type :int}, :regenerateshp {:type :boolean}, :whatbuildsnumber {:type :int}, :mineralprice {:type :int}, :sightrange {:type :int}, :upgrades {:type :list, :values {:type :struct, :name messages.UpgradeType, :fields {:id {:type :int}}}}, :topspeed {:type :double}, :isburrowable {:type :boolean}, :maxgroundhits {:type :int}, :requirescreep {:type :boolean}, :maxshields {:type :int}, :dimensionleft {:type :int}, :race {:type :enum, :values #{:zerg :unknown :other :protoss :random :terran :none}}, :name {:type :string}, :tileheight {:type :int}, :sublabel {:type :string}, :spacerequired {:type :int}, :airweapon {:type :struct, :name messages.WeaponType, :fields {:id {:type :int}}}, :gasprice {:type :int}, :canproduce {:type :boolean}, :istwounitsinoneegg {:type :boolean}, :tilewidth {:type :int}, :isrobotic {:type :boolean}, :abilities {:type :list, :values {:type :struct, :name messages.TechType, :fields {:id {:type :int}}}}, :requirespsi {:type :boolean}, :size {:type :enum, :values #{:large :medium :independent :small :unknownsize :nonesize}}, :dimensionup {:type :int}, :isworker {:type :boolean}, :isbuilding {:type :boolean}, :dimensiondown {:type :int}, :armorupgrade {:type :struct, :name messages.UpgradeType, :fields {:id {:type :int}}}, :isdetector {:type :boolean}, :ismechanical {:type :boolean}, :supplyrequired {:type :int}, :iscloakable {:type :boolean}, :isorganic {:type :boolean}, :supplyprovided {:type :int}, :isflyingbuilding {:type :boolean}, :isaddon {:type :boolean}, :id {:type :int}, :requiredtech {:type :struct, :name messages.TechType, :fields {:id {:type :int}}}, :requiredunits {:type :list, :values {:type :struct, :name messages.UnitTypeIntPair, :fields {:type {:type :struct, :name messages.UnitType, :fields {:id {:type :int}}}, :count {:type :int}}}}, :canattack {:type :boolean}, :maxhitpoints {:type :int}, :armor {:type :int}, :isresourcedepot {:type :boolean}, :isresourcecontainer {:type :boolean}, :isneutral {:type :boolean}, :buildscore {:type :int}, :acceleration {:type :int}, :maxairhits {:type :int}, :buildtime {:type :int}, :destroyscore {:type :int}, :haspermanentcloak {:type :boolean}, :haltdistance {:type :int}, :isspellcaster {:type :boolean}, :seekrange {:type :int}, :groundweapon {:type :struct, :name messages.WeaponType, :fields {:id {:type :int}}}, :canmove {:type :boolean}, :whatbuildstype {:type :struct, :name messages.UnitType, :fields {:id {:type :int}}}, :isflyer {:type :boolean}, :spaceprovided {:type :int}, :isinvincible {:type :boolean}}}}, :upgrades {:type :list, :values {:type :struct, :name messages.UpgradeTypeData, :fields {:gaspricebase {:type :int}, :mineralpricefactor {:type :int}, :whatuses {:type :list, :values {:type :struct, :name messages.UnitType, :fields {:id {:type :int}}}}, :race {:type :enum, :values #{:zerg :unknown :other :protoss :random :terran :none}}, :name {:type :string}, :mineralpricebase {:type :int}, :gaspricefactor {:type :int}, :maxrepeats {:type :int}, :whatupgrades {:type :struct, :name messages.UnitType, :fields {:id {:type :int}}}, :id {:type :int}, :upgradetimefactor {:type :int}, :upgradetimebase {:type :int}}}}, :groundheight {:type :list, :values {:type :int}}, :races {:type :list, :values {:type :struct, :name messages.RaceData, :fields {:id {:type :enum, :values #{:zerg :unknown :other :protoss :random :terran :none}}, :name {:type :string}, :worker {:type :struct, :name messages.UnitType, :fields {:id {:type :int}}}, :center {:type :struct, :name messages.UnitType, :fields {:id {:type :int}}}, :refinery {:type :struct, :name messages.UnitType, :fields {:id {:type :int}}}, :transport {:type :struct, :name messages.UnitType, :fields {:id {:type :int}}}, :supplyprovider {:type :struct, :name messages.UnitType, :fields {:id {:type :int}}}}}}, :mapwidth {:type :int}, :weapons {:type :list, :values {:type :struct, :name messages.WeaponTypeData, :fields {:maxrange {:type :int}, :whatuses {:type :struct, :name messages.UnitType, :fields {:id {:type :int}}}, :targetsown {:type :boolean}, :upgradetype {:type :struct, :name messages.UpgradeType, :fields {:id {:type :int}}}, :name {:type :string}, :damageamount {:type :int}, :outersplashradius {:type :int}, :innersplashradius {:type :int}, :damagebonus {:type :int}, :minrange {:type :int}, :targetsground {:type :boolean}, :explosiontype {:type :enum, :values #{:dark-swarm :irradiate :stasis-field :feedback :air-splash :optical-flare :explosionnone :explosionunknown :nuclear-missile :parasite :ensnare :lockdown :corrosive-acid :consume :enemy-splash :explosionnormal :restoration :broodlings :plague :disruption-web :maelstrom :radial-splash :emp-shockwave :mind-control :yamato-gun}}, :damagecooldown {:type :int}, :targetsmechanical {:type :boolean}, :mediansplashradius {:type :int}, :targetsorgormech {:type :boolean}, :id {:type :int}, :targetsnonbuilding {:type :boolean}, :targetsair {:type :boolean}, :damagefactor {:type :int}, :damagetype {:type :enum, :values #{:independentdamage :unknowndamage :ignorearmor :normal :concussive :nonedamage :explosive}}, :targetsterrain {:type :boolean}, :tech {:type :struct, :name messages.TechType, :fields {:id {:type :int}}}, :targetsorganic {:type :boolean}, :targetsnonrobotic {:type :boolean}}}}, :colors {:type :list, :values {:type :struct, :name messages.Color, :fields {:id {:type :int}, :red {:type :int}, :green {:type :int}, :blue {:type :int}}}}, :maphash {:type :string}, :staticgeysers {:type :list, :values {:type :struct, :name messages.UnitId, :fields {:id {:type :int}}}}, :mapheight {:type :int}, :startlocations {:type :list, :values {:type :struct, :name messages.TilePosition, :fields {:x {:type :int}, :y {:type :int}}}}, :techs {:type :list, :values {:type :struct, :name messages.TechTypeData, :fields {:whatresearches {:type :struct, :name messages.UnitType, :fields {:id {:type :int}}}, :mineralprice {:type :int}, :researchtime {:type :int}, :whatuses {:type :list, :values {:type :struct, :name messages.UnitType, :fields {:id {:type :int}}}}, :race {:type :enum, :values #{:zerg :unknown :other :protoss :random :terran :none}}, :weapon {:type :struct, :name messages.WeaponType, :fields {:id {:type :int}}}, :name {:type :string}, :gasprice {:type :int}, :energyused {:type :int}, :id {:type :int}}}}, :mapname {:type :string}, :staticminerals {:type :list, :values {:type :struct, :name messages.UnitId, :fields {:id {:type :int}}}}, :mapfilename {:type :string}, :walkable {:type :list, :values {:type :int}}, :buildable {:type :list, :values {:type :int}}}}user=> CompilerException java.lang.RuntimeException: Unable to resolve symbol: build-unit-set in this context, compiling:(/Users/xylu/Project/bwai/src/clj/lab/dexter/noah/starcraft/models/game.clj:12:30)


;(mk-game [] "1")

(print (protobuf-schema StaticGameData))

(defn build-unit-set[ids]
  )

(defn read-static-game-data [game data]
  (conj game :static-minerals (build-unit-set (:staticminerals data)))
  )